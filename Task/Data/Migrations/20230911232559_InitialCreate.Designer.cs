// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task.Data;

#nullable disable

namespace Task.Migrations
{
    [DbContext(typeof(SeeriContext))]
    [Migration("20230911232559_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Task.Data.Entities.TaskEntity", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("task_id");

                    b.Property<DateOnly>("CreateDate")
                        .HasColumnType("date")
                        .HasColumnName("createDate");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("descripcion");

                    b.Property<int?>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.Property<string>("Titulo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("titulo");

                    b.Property<DateOnly?>("UpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("updateDate");

                    b.HasKey("TaskId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "State" }, "type_state_id_idx");

                    b.ToTable("task", (string)null);
                });

            modelBuilder.Entity("Task.Data.Entities.TypeStateEntity", b =>
                {
                    b.Property<int>("TypeStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("type_state_id");

                    b.Property<DateOnly>("CreateDate")
                        .HasColumnType("date")
                        .HasColumnName("create_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("name");

                    b.Property<DateOnly?>("UpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("update_date");

                    b.HasKey("TypeStateId")
                        .HasName("PRIMARY");

                    b.ToTable("type_state", (string)null);
                });

            modelBuilder.Entity("Task.Data.Entities.TaskEntity", b =>
                {
                    b.HasOne("Task.Data.Entities.TypeStateEntity", "StateNavigation")
                        .WithMany("Tasks")
                        .HasForeignKey("State")
                        .HasConstraintName("type_state_id");

                    b.Navigation("StateNavigation");
                });

            modelBuilder.Entity("Task.Data.Entities.TypeStateEntity", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
